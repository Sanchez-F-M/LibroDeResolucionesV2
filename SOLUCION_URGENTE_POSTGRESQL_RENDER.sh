#!/bin/bash

echo "üîß SOLUCI√ìN URGENTE - ERROR POSTGRESQL EN RENDER"
echo "==============================================="
echo ""
echo "‚ùå PROBLEMA IDENTIFICADO:"
echo "  Error: getaddrinfo ENOTFOUND libro-resoluciones-db"
echo "  Causa: Base de datos PostgreSQL no existe en Render"
echo ""
echo "üöÄ SOLUCI√ìN PASO A PASO:"
echo "========================"
echo ""
echo "PASO 1: CREAR BASE DE DATOS POSTGRESQL EN RENDER"
echo "------------------------------------------------"
echo "1. Ir a https://dashboard.render.com"
echo "2. Hacer clic en 'New +' ‚Üí 'PostgreSQL'"
echo "3. Configurar:"
echo "   - Name: libro-resoluciones-db"
echo "   - Database: libro_resoluciones"
echo "   - User: libro_user"
echo "   - Region: Misma que el backend"
echo "   - Plan: Free (por ahora)"
echo "4. Hacer clic en 'Create Database'"
echo "5. ESPERAR 2-3 minutos hasta que est√© 'Available'"
echo ""
echo "PASO 2: OBTENER CREDENCIALES DE LA BASE DE DATOS"
echo "-----------------------------------------------"
echo "1. En el dashboard de la BD reci√©n creada:"
echo "2. Copiar las siguientes variables:"
echo "   - Internal Database URL (la que termina en .render.com)"
echo "   - Username"
echo "   - Password"
echo "   - Database Name"
echo "   - Port (normalmente 5432)"
echo ""
echo "PASO 3: CONFIGURAR VARIABLES EN EL BACKEND"
echo "-----------------------------------------"
echo "1. Ir al servicio backend: 'libroderesoluciones-api'"
echo "2. Environment ‚Üí Editar variables:"
echo ""
echo "   DB_HOST=<hostname_de_la_bd_interna>"
echo "   DB_USER=<username_de_la_bd>"
echo "   DB_PASSWORD=<password_de_la_bd>"
echo "   DB_NAME=libro_resoluciones"
echo "   DB_PORT=5432"
echo ""
echo "EJEMPLO DE CONFIGURACI√ìN:"
echo "-------------------------"
echo "DB_HOST=libro-resoluciones-db-abc123.render.com"
echo "DB_USER=libro_user"
echo "DB_PASSWORD=abcd1234efgh5678"
echo "DB_NAME=libro_resoluciones"
echo "DB_PORT=5432"
echo ""
echo "PASO 4: REDESPLEGAR EL BACKEND"
echo "------------------------------"
echo "1. Despu√©s de configurar las variables"
echo "2. Hacer 'Manual Deploy' del backend"
echo "3. Esperar 3-5 minutos"
echo ""
echo "‚ö†Ô∏è NOTA IMPORTANTE:"
echo "==================="
echo "- El plan FREE de PostgreSQL en Render tiene l√≠mites"
echo "- Se recomienda usar el Internal Database URL (m√°s r√°pido)"
echo "- Las variables deben coincidir exactamente"
echo ""
echo "üß™ VERIFICACI√ìN POST-CONFIGURACI√ìN:"
echo "==================================="
echo "curl https://libroderesoluciones-api.onrender.com/health"
echo "# Debe mostrar status: healthy sin errores de BD"
echo ""
echo "curl -X POST https://libroderesoluciones-api.onrender.com/api/user/register \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"Nombre\":\"test_user\",\"Contrasena\":\"test123\",\"Rol\":\"usuario\"}'"
echo "# Debe crear el usuario exitosamente"
echo ""
echo "‚è∞ TIEMPO ESTIMADO TOTAL: 10-15 minutos"
echo "üí∞ COSTO: $0 (plan gratuito de PostgreSQL)"
echo ""
echo "üÜò SI HAY PROBLEMAS:"
echo "==================="
echo "1. Verificar que la BD est√© 'Available' en Render"
echo "2. Usar EXACTAMENTE el Internal Database URL"
echo "3. Verificar que las credenciales sean correctas"
echo "4. Comprobar que el backend y BD est√©n en la misma regi√≥n"
