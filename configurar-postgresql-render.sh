#!/bin/bash

echo "üîß CONFIGURACI√ìN POSTGRESQL RENDER - SOLUCI√ìN DEFINITIVA"
echo "======================================================="
echo ""
echo "üìã PROBLEMA ACTUAL:"
echo "  ‚ùå Error: getaddrinfo ENOTFOUND libro-resoluciones-db"
echo "  ‚ùå Backend no puede conectarse a PostgreSQL"
echo "  ‚ùå Error 500 en todas las operaciones de BD"
echo ""
echo "‚úÖ SOLUCI√ìN: CREAR POSTGRESQL EN RENDER"
echo "======================================"
echo ""

echo "üóÑÔ∏è PASO 1: CREAR BASE DE DATOS"
echo "------------------------------"
echo "1. Ir a: https://dashboard.render.com"
echo "2. Hacer clic en: 'New +' ‚Üí 'PostgreSQL'"
echo "3. Configurar:"
echo "   Name: libro-resoluciones-db"
echo "   Database: libro_resoluciones"
echo "   User: libro_user"
echo "   Region: Ohio (US East) - MISMA que tu backend"
echo "   Plan: Free"
echo "4. Hacer clic en: 'Create Database'"
echo "5. ESPERAR 2-3 minutos hasta que aparezca 'Available'"
echo ""

echo "üîó PASO 2: OBTENER DATABASE_URL"
echo "------------------------------"
echo "1. En el dashboard de la BD reci√©n creada"
echo "2. Ir a la secci√≥n 'Info'"
echo "3. Copiar 'Internal Database URL'"
echo ""
echo "   Formato esperado:"
echo "   postgresql://libro_user_xxxx:password@libro-resoluciones-db-xxxx.render.com:5432/libro_resoluciones"
echo ""

echo "‚öôÔ∏è PASO 3: CONFIGURAR EN BACKEND"
echo "-------------------------------"
echo "1. Ir al servicio 'libroderesoluciones-api'"
echo "2. Environment ‚Üí 'Add Environment Variable'"
echo "3. Agregar:"
echo ""
echo "   Key: DATABASE_URL"
echo "   Value: postgresql://libro_user_xxxx:password@libro-resoluciones-db-xxxx.render.com:5432/libro_resoluciones"
echo ""
echo "4. Hacer clic en 'Save Changes'"
echo ""

echo "üöÄ PASO 4: REDESPLEGAR BACKEND"
echo "-----------------------------"
echo "1. Hacer clic en 'Manual Deploy'"
echo "2. Seleccionar 'Deploy latest commit'"
echo "3. Esperar 3-5 minutos"
echo ""

echo "üß™ PASO 5: VERIFICAR FUNCIONAMIENTO"
echo "==================================="
echo "curl https://libroderesoluciones-api.onrender.com/health"
echo "# Debe mostrar status: healthy sin errores"
echo ""
echo "curl https://libroderesoluciones-api.onrender.com/diagnose"
echo "# Debe mostrar database.status: connected"
echo ""
echo "curl -X POST https://libroderesoluciones-api.onrender.com/api/user/login \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"Nombre\":\"admin\",\"Contrasena\":\"admin123\"}'"
echo "# Debe retornar token JWT exitosamente"
echo ""

echo "‚ö†Ô∏è NOTAS IMPORTANTES:"
echo "====================="
echo "- Usar INTERNAL Database URL (no External)"
echo "- Backend y BD deben estar en la MISMA regi√≥n"
echo "- Plan Free PostgreSQL tiene 1GB de l√≠mite"
echo "- La URL debe copiarse EXACTAMENTE como aparece"
echo ""

echo "üÜò SI HAY PROBLEMAS:"
echo "==================="
echo "1. Verificar que la BD est√© 'Available' (no 'Creating')"
echo "2. Verificar que DATABASE_URL est√© configurada correctamente"
echo "3. Verificar que backend y BD est√©n en misma regi√≥n"
echo "4. Revisar logs del backend durante el startup"
echo ""

echo "‚è∞ TIEMPO TOTAL ESTIMADO: 10-15 minutos"
echo "üí∞ COSTO: $0 (PostgreSQL Free Plan)"
echo ""

echo "üéØ PR√ìXIMO PASO INMEDIATO:"
echo "========================="
echo "üëâ CREAR POSTGRESQL EN RENDER AHORA"
echo "üì± https://dashboard.render.com ‚Üí New + ‚Üí PostgreSQL"
