#!/bin/bash

echo "üîç DIAGN√ìSTICO RENDER POSTGRESQL - ERROR ENOTFOUND"
echo "================================================="
echo ""

echo "üìä AN√ÅLISIS DEL ERROR:"
echo "====================="
echo "‚ùå Error: getaddrinfo ENOTFOUND libro-resoluciones-db"
echo "‚ùå Ubicaci√≥n: /opt/render/project/src/server/db/postgres-connection.js:26"
echo "‚ùå Causa: Hostname 'libro-resoluciones-db' no resuelve"
echo ""

echo "üîç VARIABLES DE ENTORNO REQUERIDAS:"
echo "==================================="
echo "El c√≥digo busca estas variables (con valores por defecto):"
echo ""
echo "DB_HOST=process.env.DB_HOST || 'localhost'"
echo "DB_USER=process.env.DB_USER || 'postgres'"
echo "DB_NAME=process.env.DB_NAME || 'libro_resoluciones'"
echo "DB_PASSWORD=process.env.DB_PASSWORD || 'admin123'"
echo "DB_PORT=process.env.DB_PORT || 5433"
echo ""

echo "üö® PROBLEMA ACTUAL:"
echo "=================="
echo "En producci√≥n (Render), el c√≥digo est√° usando:"
echo "- DB_HOST='localhost' (no existe en Render)"
echo "- O DB_HOST='libro-resoluciones-db' (no configurado)"
echo ""

echo "‚úÖ SOLUCI√ìN PASO A PASO:"
echo "======================="
echo ""

echo "PASO 1: CREAR POSTGRESQL DATABASE EN RENDER"
echo "-------------------------------------------"
echo "üåê Dashboard: https://dashboard.render.com"
echo "1. New + ‚Üí PostgreSQL"
echo "2. Name: libro-resoluciones-db"
echo "3. Database: libro_resoluciones"
echo "4. User: libro_user"
echo "5. Region: Same as backend"
echo "6. Plan: Free"
echo "7. Create Database"
echo ""

echo "PASO 2: OBTENER CREDENCIALES"
echo "----------------------------"
echo "Despu√©s de crear la BD, ir a su dashboard y copiar:"
echo ""
echo "üìã Internal Database URL (ejemplo):"
echo "   libro-resoluciones-db-xxxx.render.com"
echo ""
echo "üìã Credenciales completas:"
echo "   Username: libro_user_xxxx"
echo "   Password: abcd1234..."
echo "   Database: libro_resoluciones"
echo "   Port: 5432"
echo ""

echo "PASO 3: CONFIGURAR EN BACKEND"
echo "-----------------------------"
echo "Ir al servicio 'libroderesoluciones-api' ‚Üí Environment:"
echo ""
echo "DB_HOST=libro-resoluciones-db-xxxx.render.com"
echo "DB_USER=libro_user_xxxx"
echo "DB_PASSWORD=abcd1234..."
echo "DB_NAME=libro_resoluciones"
echo "DB_PORT=5432"
echo ""

echo "PASO 4: REDEPLOY BACKEND"
echo "-----------------------"
echo "Manual Deploy ‚Üí Deploy latest commit"
echo ""

echo "‚ö° SOLUCI√ìN ALTERNATIVA R√ÅPIDA:"
echo "=============================="
echo "Si necesitas una soluci√≥n INMEDIATA:"
echo ""
echo "1. Usar SQLite temporalmente modificando connection.js"
echo "2. O usar una BD externa (como ElephantSQL/Supabase)"
echo "3. O usar el DATABASE_URL completo de Render"
echo ""

echo "üß™ COMANDO DE VERIFICACI√ìN:"
echo "=========================="
echo "Despu√©s de configurar:"
echo ""
echo "curl https://libroderesoluciones-api.onrender.com/diagnose"
echo ""
echo "Debe mostrar:"
echo "- database.status: 'connected'"
echo "- database.error: null"
echo ""

echo "üí° TIPS IMPORTANTES:"
echo "==================="
echo "- Usar Internal Database URL (m√°s r√°pido)"
echo "- Backend y BD en misma regi√≥n (menor latencia)"
echo "- El plan Free tiene l√≠mites pero es suficiente para testing"
echo "- Guardar credenciales en lugar seguro"
echo ""

echo "‚è∞ TIEMPO TOTAL ESTIMADO: 10-15 minutos"
echo "üí∞ COSTO: $0 (PostgreSQL Free Plan)"
echo ""

echo "üÜò SI NECESITAS AYUDA:"
echo "====================="
echo "1. Verificar que la BD est√© 'Available' (no 'Creating')"
echo "2. Copiar exactamente las credenciales del dashboard"
echo "3. Usar Internal URL, no External"
echo "4. Verificar logs del backend despu√©s del deploy"
echo ""

echo "üéØ PR√ìXIMO PASO:"
echo "==============="
echo "üëÜ CREAR LA BASE DE DATOS POSTGRESQL EN RENDER AHORA"
echo "üì± https://dashboard.render.com ‚Üí New + ‚Üí PostgreSQL"
