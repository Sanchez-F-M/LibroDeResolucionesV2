#!/bin/bash

echo "üîß CORRIGIENDO CONFIGURACI√ìN DE PUERTOS POSTGRESQL"
echo "==============================================="

echo ""
echo "‚ùå PROBLEMA IDENTIFICADO:"
echo "- Puerto local PostgreSQL: 5433"
echo "- Puerto est√°ndar PostgreSQL: 5432"
echo "- Puerto en Render: 5432"
echo "- Configuraci√≥n actual: hardcoded a 5433"
echo ""

echo "‚úÖ SOLUCI√ìN APLICADA:"
echo "- Local (desarrollo): usa puerto 5433 (DB_PORT o fallback)"
echo "- Producci√≥n: usa puerto 5432 (est√°ndar PostgreSQL)"
echo "- Configuraci√≥n inteligente seg√∫n NODE_ENV"
echo ""

echo "üìù ARCHIVOS CORREGIDOS:"
echo "======================"

# Verificar archivos con puerto 5433
echo "üîç Buscando archivos con puerto 5433..."
grep -r "5433" server/ --include="*.js" | while read -r line; do
    file=$(echo "$line" | cut -d: -f1)
    echo "   üìÑ $file"
done

echo ""
echo "üéØ CONFIGURACI√ìN INTELIGENTE APLICADA:"
echo "====================================="
echo "// En postgres-connection.js:"
echo "port: parseInt(process.env.DB_PORT) || (process.env.NODE_ENV === 'production' ? 5432 : 5433),"
echo ""
echo "‚úÖ Esto significa:"
echo "   - Si DB_PORT est√° definido ‚Üí usa ese puerto"
echo "   - Si NODE_ENV=production ‚Üí usa 5432 (Render)"
echo "   - Si es desarrollo local ‚Üí usa 5433"
echo ""

echo "üîß VARIABLES DE ENTORNO RECOMENDADAS:"
echo "===================================="
echo ""
echo "PARA RENDER (producci√≥n):"
echo "-------------------------"
echo "DATABASE_URL=postgresql://user:pass@host:5432/db"
echo "# O alternativamente:"
echo "DB_HOST=tu-host.render.com"
echo "DB_USER=tu-usuario"
echo "DB_PASSWORD=tu-password"
echo "DB_NAME=libro_resoluciones"
echo "DB_PORT=5432"
echo ""

echo "PARA DESARROLLO LOCAL:"
echo "----------------------"
echo "DB_HOST=localhost"
echo "DB_USER=postgres"
echo "DB_PASSWORD=admin123"
echo "DB_NAME=libro_resoluciones"
echo "DB_PORT=5433"
echo ""

echo "üß™ PRUEBA DE CONFIGURACI√ìN:"
echo "==========================="

# Probar configuraci√≥n local
echo "üìç Probando configuraci√≥n local..."
if command -v psql &> /dev/null; then
    # Intentar conectar a PostgreSQL local
    PGPASSWORD=admin123 psql -h localhost -p 5433 -U postgres -d libro_resoluciones -c "SELECT 1;" 2>/dev/null && {
        echo "‚úÖ PostgreSQL local (puerto 5433) funcionando"
    } || {
        echo "‚ö†Ô∏è  PostgreSQL local no disponible en puerto 5433"
        echo "   Verifica que PostgreSQL est√© ejecut√°ndose"
    }
else
    echo "‚ö†Ô∏è  psql no disponible para prueba local"
fi

echo ""
echo "üìã VERIFICACI√ìN PARA RENDER:"
echo "============================"
echo "1. ‚úÖ Puerto corregido en c√≥digo"
echo "2. ‚è≥ Configurar DATABASE_URL en Render con puerto 5432"
echo "3. ‚è≥ Redesplegar aplicaci√≥n"
echo "4. ‚è≥ Probar endpoints despu√©s del despliegue"
echo ""

echo "üéØ PR√ìXIMOS PASOS:"
echo "=================="
echo "1. Configurar PostgreSQL en Render (puerto 5432)"
echo "2. Configurar DATABASE_URL en variables de entorno"
echo "3. Hacer git commit y push de estos cambios"
echo "4. Esperar redespliegue autom√°tico"
echo "5. Probar funcionamiento con:"
echo "   bash verificacion-final-completa.sh"
echo ""

echo "‚úÖ CONFIGURACI√ìN DE PUERTOS COMPLETADA"
echo ""
echo "üìû La aplicaci√≥n ahora usar√°:"
echo "   - Puerto 5433 en desarrollo (tu configuraci√≥n actual)"
echo "   - Puerto 5432 en producci√≥n (est√°ndar de Render)"
