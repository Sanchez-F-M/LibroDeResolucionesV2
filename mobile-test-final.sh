#!/bin/bash

# Script de Prueba Final para Dispositivos M√≥viles
# Versi√≥n: 1.0 - Enero 2025

echo "üîã INICIANDO PRUEBA FINAL PARA DISPOSITIVOS M√ìVILES"
echo "=================================================="

# Obtener IP local
LOCAL_IP=$(ipconfig | grep "IPv4" | grep "192.168" | head -1 | awk '{print $NF}')
if [ -z "$LOCAL_IP" ]; then
    LOCAL_IP="192.168.1.235"
fi

echo "üìç IP Local detectada: $LOCAL_IP"

# Verificar servicios activos
echo ""
echo "üîç VERIFICANDO SERVICIOS..."
echo "----------------------------"

BACKEND_STATUS=$(curl -s http://localhost:10000/api/books/all | head -c 50)
if [ ! -z "$BACKEND_STATUS" ]; then
    echo "‚úÖ Backend: ACTIVO en puerto 10000"
else
    echo "‚ùå Backend: INACTIVO - Iniciando..."
    cd "c:\Users\flavi\OneDrive\Escritorio\LibroDeResolucionesV2\server"
    npm start &
    sleep 5
fi

FRONTEND_CHECK=$(netstat -an | grep ":5173")
if [ ! -z "$FRONTEND_CHECK" ]; then
    echo "‚úÖ Frontend: ACTIVO en puerto 5173"
else
    echo "‚ùå Frontend: INACTIVO - Iniciando..."
    cd "c:\Users\flavi\OneDrive\Escritorio\LibroDeResolucionesV2\front"
    npm run dev &
    sleep 5
fi

echo ""
echo "üì± URLS PARA TESTING M√ìVIL"
echo "==========================="
echo "üåê Aplicaci√≥n Principal: http://$LOCAL_IP:5173"
echo "üîß Diagn√≥stico M√≥vil: http://$LOCAL_IP:5173/mobile-diagnostic.html"
echo "‚öôÔ∏è  API Backend: http://$LOCAL_IP:10000/api/books/all"
echo "üñºÔ∏è  Imagen de Prueba: http://$LOCAL_IP:10000/uploads/1746055049685-diagrama_ep.png"

echo ""
echo "üìã CHECKLIST PARA PRUEBA M√ìVIL"
echo "==============================="
echo "1. ‚úÖ Conectar dispositivo m√≥vil a la misma WiFi"
echo "2. ‚úÖ Abrir navegador m√≥vil (Chrome/Safari)"
echo "3. ‚úÖ Navegar a: http://$LOCAL_IP:5173"
echo "4. ‚úÖ Probar b√∫squeda de resoluciones"
echo "5. ‚úÖ Verificar carga de im√°genes"
echo "6. ‚úÖ Probar descarga de documentos"
echo "7. ‚úÖ Verificar herramienta diagn√≥stico: http://$LOCAL_IP:5173/mobile-diagnostic.html"

echo ""
echo "üîß COMANDOS DE VERIFICACI√ìN"
echo "==========================="
echo "# Verificar API desde m√≥vil:"
echo "curl http://$LOCAL_IP:10000/api/books/all"
echo ""
echo "# Verificar imagen desde m√≥vil:"
echo "curl -I http://$LOCAL_IP:10000/uploads/1746055049685-diagrama_ep.png"

echo ""
echo "üìä ESTADO ACTUAL DEL SISTEMA"
echo "============================="

# Verificar base de datos
DB_COUNT=$(curl -s http://localhost:10000/api/books/all | grep -o '"NumdeResolucion"' | wc -l)
echo "üìö Resoluciones en base de datos: $DB_COUNT"

# Verificar archivos de imagen disponibles
UPLOAD_COUNT=$(ls "c:\Users\flavi\OneDrive\Escritorio\LibroDeResolucionesV2\server\uploads" 2>/dev/null | wc -l)
echo "üñºÔ∏è  Archivos en uploads: $UPLOAD_COUNT"

# Test de conectividad b√°sica
echo ""
echo "üåê TEST DE CONECTIVIDAD"
echo "=======================" 
ping -c 1 $LOCAL_IP > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ IP local accesible"
else
    echo "‚ùå Problema de conectividad IP local"
fi

curl -s http://localhost:10000/api/books/all > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ API Backend responde"
else
    echo "‚ùå API Backend no responde"
fi

curl -s http://localhost:5173 > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Frontend responde"
else
    echo "‚ùå Frontend no responde"
fi

echo ""
echo "üéØ PR√ìXIMOS PASOS"
echo "=================="
echo "1. Usar dispositivo m√≥vil conectado a WiFi"
echo "2. Abrir http://$LOCAL_IP:5173 en el navegador m√≥vil"
echo "3. Probar funcionalidad completa"
echo "4. Si hay problemas, usar http://$LOCAL_IP:5173/mobile-diagnostic.html"
echo "5. Reportar cualquier error encontrado"

echo ""
echo "‚ú® SISTEMA LISTO PARA PRUEBAS M√ìVILES ‚ú®"
echo "========================================"
