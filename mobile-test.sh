#!/bin/bash

# Script para probar las mejoras de visualizaci√≥n m√≥vil
# mobile-test.sh

echo "üîß Probando mejoras de visualizaci√≥n m√≥vil..."

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Funci√≥n para logging
log_info() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo "üì± Iniciando pruebas de funcionalidad m√≥vil..."

# 1. Verificar que los archivos modificados existen
echo ""
echo "üîç Verificando archivos modificados..."

files_to_check=(
    "front/src/utils/imageUtils.js"
    "front/src/pages/MostrarLibro/MostrarLibro.jsx"
    "front/src/pages/busquedas/busquedas.jsx"
    "front/src/index.css"
    "front/index.html"
    "server/index.js"
    "front/.env.example"
)

for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        log_info "Archivo existe: $file"
    else
        log_error "Archivo no encontrado: $file"
    fi
done

# 2. Verificar funciones m√≥viles en imageUtils.js
echo ""
echo "üîç Verificando funciones m√≥viles en imageUtils.js..."

if grep -q "isMobileDevice" front/src/utils/imageUtils.js; then
    log_info "Funci√≥n isMobileDevice() a√±adida"
else
    log_error "Funci√≥n isMobileDevice() no encontrada"
fi

if grep -q "preloadImage" front/src/utils/imageUtils.js; then
    log_info "Funci√≥n preloadImage() a√±adida"
else
    log_error "Funci√≥n preloadImage() no encontrada"
fi

if grep -q "getOptimizedImageUrl" front/src/utils/imageUtils.js; then
    log_info "Funci√≥n getOptimizedImageUrl() a√±adida"
else
    log_error "Funci√≥n getOptimizedImageUrl() no encontrada"
fi

# 3. Verificar meta tags m√≥viles en index.html
echo ""
echo "üîç Verificando meta tags m√≥viles en index.html..."

if grep -q "mobile-web-app-capable" front/index.html; then
    log_info "Meta tag mobile-web-app-capable encontrado"
else
    log_error "Meta tag mobile-web-app-capable no encontrado"
fi

if grep -q "viewport-fit=cover" front/index.html; then
    log_info "Meta viewport con viewport-fit=cover encontrado"
else
    log_error "Meta viewport optimizado no encontrado"
fi

# 4. Verificar estilos CSS m√≥viles
echo ""
echo "üîç Verificando estilos CSS m√≥viles..."

if grep -q "pinch-zoom-image" front/src/index.css; then
    log_info "Clase pinch-zoom-image a√±adida"
else
    log_error "Clase pinch-zoom-image no encontrada"
fi

if grep -q "image-action-button" front/src/index.css; then
    log_info "Clase image-action-button a√±adida"
else
    log_error "Clase image-action-button no encontrada"
fi

if grep -q "touch-action: manipulation" front/src/index.css; then
    log_info "Optimizaci√≥n touch-action a√±adida"
else
    log_error "Optimizaci√≥n touch-action no encontrada"
fi

# 5. Verificar configuraci√≥n CORS m√≥vil en server
echo ""
echo "üîç Verificando configuraci√≥n CORS m√≥vil en server..."

if grep -q "isMobile.*Android" server/index.js; then
    log_info "Detecci√≥n de m√≥viles en CORS a√±adida"
else
    log_error "Detecci√≥n de m√≥viles en CORS no encontrada"
fi

if grep -q "192.168." server/index.js; then
    log_info "Soporte para IP local/m√≥vil a√±adido"
else
    log_error "Soporte para IP local/m√≥vil no encontrado"
fi

# 6. Verificar importaciones actualizadas
echo ""
echo "üîç Verificando importaciones actualizadas..."

if grep -q "preloadImage.*getOptimizedImageUrl" front/src/pages/MostrarLibro/MostrarLibro.jsx; then
    log_info "Importaciones actualizadas en MostrarLibro.jsx"
else
    log_error "Importaciones no actualizadas en MostrarLibro.jsx"
fi

if grep -q "getOptimizedImageUrl" front/src/pages/busquedas/busquedas.jsx; then
    log_info "Importaciones actualizadas en busquedas.jsx"
else
    log_error "Importaciones no actualizadas en busquedas.jsx"
fi

echo ""
echo "üì± Pruebas completadas!"
echo ""
echo "üîß Pr√≥ximos pasos para pruebas en dispositivos reales:"
echo "1. Compilar el frontend: npm run build"
echo "2. Servir el build: npm run preview"
echo "3. Probar en m√≥vil usando la IP local"
echo "4. Verificar que las im√°genes cargan correctamente"
echo "5. Probar funcionalidad de zoom y descarga"
echo ""
echo "üìù Para desarrollo m√≥vil local:"
echo "1. Encontrar IP local: ipconfig (Windows) o ifconfig (Mac/Linux)"
echo "2. Usar http://[TU-IP]:5173 en el m√≥vil"
echo "3. Asegurar que el servidor backend est√© corriendo"
echo ""
echo "üöÄ ¬°Mejoras m√≥viles implementadas!"
