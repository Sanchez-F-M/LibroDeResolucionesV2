#!/bin/bash

# Script para poblar la base de datos de producci√≥n
# Usar desde Git Bash en Windows

API_BASE_URL="https://libro-resoluciones-api.onrender.com"
DUMMY_FILE="dummy.txt"

echo "üöÄ Iniciando poblado de base de datos en producci√≥n..."
echo "üåê Backend URL: $API_BASE_URL"

# Crear archivo dummy para los uploads
echo "Documento de resoluci√≥n - generado autom√°ticamente" > $DUMMY_FILE

# Funci√≥n para obtener token
get_token() {
    echo "üîê Obteniendo token de autenticaci√≥n..."
    TOKEN=$(curl -s -X POST -H "Content-Type: application/json" \
        -d '{"Nombre":"admin","Contrasena":"admin123"}' \
        "$API_BASE_URL/api/user/login" | \
        grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    
    if [ -z "$TOKEN" ]; then
        echo "‚ùå Error obteniendo token"
        exit 1
    fi
    
    echo "‚úÖ Token obtenido exitosamente"
}

# Funci√≥n para crear resoluci√≥n
create_resolution() {
    local num="$1"
    local asunto="$2"
    local referencia="$3"
    local fecha="$4"
    
    echo "üìÑ Creando resoluci√≥n: $num - $asunto"
    
    RESPONSE=$(curl -s -X POST \
        -H "Authorization: Bearer $TOKEN" \
        -F "NumdeResolucion=$num" \
        -F "Asunto=$asunto" \
        -F "Referencia=$referencia" \
        -F "FechaCreacion=$fecha" \
        -F "files=@$DUMMY_FILE" \
        "$API_BASE_URL/api/books")
    
    if echo "$RESPONSE" | grep -q "exitosamente"; then
        echo "‚úÖ Resoluci√≥n $num creada exitosamente"
        return 0
    else
        echo "‚ùå Error creando resoluci√≥n $num: $RESPONSE"
        return 1
    fi
}

# Obtener token
get_token

echo ""
echo "üìù Creando resoluciones de prueba..."

SUCCESS_COUNT=0
ERROR_COUNT=0

# Crear resoluciones
create_resolution "001-2025" "Aprobaci√≥n del Presupuesto Anual 2025" "Expediente N¬∞ 12345/2025 - Secretar√≠a de Hacienda" "2025-01-15"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "002-2025" "Designaci√≥n de Personal en Comisar√≠a Primera" "Nota N¬∞ 456/2025 - Divisi√≥n de Recursos Humanos" "2025-01-20"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "003-2025" "Protocolo de Seguridad Ciudadana" "Informe N¬∞ 789/2025 - Comisar√≠a Central" "2025-02-01"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "004-2025" "Adquisici√≥n de Equipamiento Policial" "Licitaci√≥n N¬∞ 101/2025 - Departamento de Compras" "2025-02-10"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "005-2025" "Modificaci√≥n de Turnos de Servicio" "Memorando N¬∞ 234/2025 - Jefatura Operativa" "2025-02-15"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "006-2025" "Procedimiento de Control Vehicular" "Circular N¬∞ 567/2025 - Tr√°nsito Municipal" "2025-02-20"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "007-2025" "Capacitaci√≥n en Derechos Humanos" "Programa N¬∞ 890/2025 - Instituto de Formaci√≥n" "2025-02-25"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

sleep 1

create_resolution "008-2025" "Asignaci√≥n de M√≥viles Policiales" "Listado N¬∞ 123/2025 - Parque Automotor" "2025-03-01"
[ $? -eq 0 ] && ((SUCCESS_COUNT++)) || ((ERROR_COUNT++))

echo ""
echo "üéâ ========================================"
echo "üéâ POBLACI√ìN DE DATOS COMPLETADA"
echo "üéâ ‚úÖ Exitosas: $SUCCESS_COUNT"
echo "üéâ ‚ùå Errores: $ERROR_COUNT"
echo "üéâ ========================================"

# Verificar datos creados
echo ""
echo "üîç Verificando datos en la base de datos..."
BOOKS_RESPONSE=$(curl -s "$API_BASE_URL/api/books/all")

if echo "$BOOKS_RESPONSE" | grep -q "NumdeResolucion"; then
    echo "‚úÖ Base de datos poblada correctamente"
    echo "üìä Resoluciones encontradas:"
    echo "$BOOKS_RESPONSE" | jq -r '.[] | "   \(.NumdeResolucion) - \(.Asunto)"' 2>/dev/null || echo "$BOOKS_RESPONSE"
else
    echo "‚ö†Ô∏è  Posible problema con la verificaci√≥n"
    echo "Respuesta: $BOOKS_RESPONSE"
fi

# Limpiar archivo temporal
rm -f $DUMMY_FILE

echo ""
echo "üéâ Script completado!"
