#!/bin/bash

echo "üîß REPARACI√ìN ESPEC√çFICA - ESTRUCTURA DE BASE DE DATOS"
echo "======================================================"
echo ""

echo "üìä ESTADO DETECTADO:"
echo "===================="
echo "‚úÖ Base de datos PostgreSQL: CONECTADA"
echo "‚úÖ Tablas existentes: users, books"
echo "‚úÖ Usuarios en BD: 1"
echo "‚ùå Autenticaci√≥n: FALLA (estructura de tabla incorrecta)"
echo ""

echo "üîç PROBLEMA ESPEC√çFICO:"
echo "======================"
echo "La tabla 'users' no tiene la columna 'Rol' requerida"
echo "El usuario admin existe pero con estructura incorrecta"
echo ""

echo "‚úÖ SOLUCI√ìN AUTOM√ÅTICA:"
echo "======================"
echo ""

echo "1. Agregando columna Rol a tabla users..."
curl -s -X POST https://libroderesoluciones-api.onrender.com/init-database > /dev/null

echo "2. Creando usuario admin con rol correcto..."
admin_response=$(curl -s -X POST https://libroderesoluciones-api.onrender.com/create-admin)
echo "Respuesta: $admin_response"

echo ""
echo "3. Verificando correcci√≥n..."

# Probar autenticaci√≥n
auth_test=$(curl -s -X POST https://libroderesoluciones-api.onrender.com/api/user/login \
    -H "Content-Type: application/json" \
    -d '{"Nombre":"admin","Contrasena":"admin123"}')

if echo "$auth_test" | grep -q "token"; then
    echo "‚úÖ PROBLEMA SOLUCIONADO!"
    echo "========================"
    echo "‚úÖ Autenticaci√≥n funcionando"
    echo "‚úÖ Usuario admin configurado correctamente"
    echo "‚úÖ Sistema listo para uso"
    echo ""
    
    # Extraer token para mostrar
    token=$(echo "$auth_test" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
    echo "üé´ Token generado: ${token:0:50}..."
    
    echo ""
    echo "üß™ PRUEBA FINAL - REGISTRO USUARIO:"
    timestamp=$(date +%s)
    test_user="test_secretaria_$timestamp"
    
    register_test=$(curl -s -X POST https://libroderesoluciones-api.onrender.com/api/user/register \
        -H "Content-Type: application/json" \
        -d "{\"Nombre\":\"$test_user\",\"Contrasena\":\"test123\",\"Rol\":\"secretaria\"}")
    
    if echo "$register_test" | grep -q "Usuario creado exitosamente"; then
        echo "‚úÖ Registro de usuarios: FUNCIONANDO"
        echo ""
        echo "üéâ SISTEMA COMPLETAMENTE OPERATIVO"
        echo "=================================="
        echo "‚úÖ Backend: Funcionando"
        echo "‚úÖ PostgreSQL: Conectada y estructurada"
        echo "‚úÖ Autenticaci√≥n: Operativa"
        echo "‚úÖ Registro usuarios: Funcional"
        echo "‚úÖ Roles y permisos: Configurados"
        echo ""
        echo "üåê ACCESO A LA APLICACI√ìN:"
        echo "Frontend: https://libro-de-resoluciones-v2-9izd.vercel.app"
        echo "Backend:  https://libroderesoluciones-api.onrender.com"
        echo ""
        echo "üîê CREDENCIALES ADMIN:"
        echo "Usuario: admin"
        echo "Contrase√±a: admin123"
        echo "Rol: admin (todos los permisos)"
    else
        echo "‚ö†Ô∏è Registro parcialmente funcional"
        echo "Respuesta registro: $register_test"
    fi
    
else
    echo "‚ùå PROBLEMA PERSISTE"
    echo "==================="
    echo "Respuesta autenticaci√≥n: $auth_test"
    echo ""
    echo "üîß ACCIONES ADICIONALES REQUERIDAS:"
    echo "1. Verificar estructura de tabla users"
    echo "2. Verificar que la columna Rol existe"
    echo "3. Verificar datos del usuario admin"
fi

echo ""
echo "üì± PR√ìXIMOS PASOS:"
echo "================="
echo "Si todo est√° funcionando:"
echo "1. Probar login desde el frontend"
echo "2. Verificar creaci√≥n de secretarios"
echo "3. Confirmar permisos de administrador"
