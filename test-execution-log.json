{
  "timestamp": "2025-06-20T01:12:00.453Z",
  "totalDuration": 242550,
  "results": {
    "functional": {
      "success": true,
      "duration": 6297,
      "stdout": "🚀 INICIANDO PRUEBAS DE PRODUCCIÓN\n==================================\n🌐 Backend: https://libroderesoluciones-api.onrender.com\n🖥️ Frontend: https://libro-de-resoluciones-v2-9izd-fe0i5ihfg.vercel.app\n⏰ Timeout: 30000ms\n\n\n🧪 Ejecutando: Backend Health Check\n✅ Backend Health Check - PASSED (453ms) ⚡ Rápido\n\n🧪 Ejecutando: Backend Diagnose\n✅ Backend Diagnose - PASSED (214ms) ⚡ Rápido\n\n🧪 Ejecutando: Frontend Availability\n✅ Frontend Availability - PASSED (313ms) ⚡ Rápido\n\n🧪 Ejecutando: User Login\n✅ User Login - PASSED (558ms) ⚡ Rápido\n\n🧪 Ejecutando: User Registration\n✅ User Registration - PASSED (582ms) ⚡ Rápido\n\n🧪 Ejecutando: Invalid Login Rejection\n❌ Invalid Login Rejection - FAILED (271ms)\n   Error: Request failed with status code 400\n\n🧪 Ejecutando: Get Books API\n✅ Get Books API - PASSED (1571ms) ✅ Aceptable\n\n🧪 Ejecutando: Search Functionality\n✅ Search Functionality - PASSED (1837ms) ✅ Aceptable\n\n🧪 Ejecutando: Cloudinary Status\n✅ Cloudinary Status - PASSED (327ms) ⚡ Rápido\n\n============================================================\n📊 REPORTE FINAL DE PRUEBAS DE PRODUCCIÓN\n============================================================\n📈 Pruebas ejecutadas: 9\n✅ Exitosas: 8\n❌ Fallidas: 1\n⚠️ Advertencias: 0\n🎯 Tasa de éxito: 88.9%\n\n📋 Resultados por categoría:\n   Infraestructura: 3/3 (100.0%)\n   Autenticación: 2/3 (66.7%)\n   API: 2/2 (100.0%)\n   Cloudinary: 1/1 (100.0%)\n\n📄 Reporte guardado en: production-test-report.json\n",
      "stderr": ""
    },
    "load": {
      "success": true,
      "duration": 140595,
      "stdout": "🔥 INICIANDO PRUEBAS DE CARGA EN PRODUCCIÓN\n===========================================\n🌐 Backend: https://libroderesoluciones-api.onrender.com\n🖥️ Frontend: https://libro-de-resoluciones-v2-9izd-fe0i5ihfg.vercel.app\n👥 Usuarios concurrentes: 1, 3, 5\n⏱️ Duración por prueba: 30 segundos\n📡 Intervalo entre requests: 2000ms\n\n\n🔥 Iniciando prueba de carga: 1 usuarios concurrentes por 30s\n👤 Usuario 0 iniciado\n👤 Usuario 0 terminado\n\n📊 Resultados para 1 usuarios:\n   ⏱️  Duración: 31.6s\n   📝 Total requests: 14\n   ✅ Exitosos: 14\n   ❌ Fallidos: 0\n   📈 Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio respuesta: 254ms\n   🚀 Requests por segundo: 0.44\n⏸️ Pausa de 15 segundos entre pruebas...\n\n🔥 Iniciando prueba de carga: 3 usuarios concurrentes por 30s\n👤 Usuario 0 iniciado\n👤 Usuario 1 iniciado\n👤 Usuario 2 iniciado\n👤 Usuario 1 terminado\n👤 Usuario 2 terminado\n👤 Usuario 0 terminado\n\n📊 Resultados para 3 usuarios:\n   ⏱️  Duración: 32.2s\n   📝 Total requests: 42\n   ✅ Exitosos: 42\n   ❌ Fallidos: 0\n   📈 Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio respuesta: 254ms\n   🚀 Requests por segundo: 1.30\n⏸️ Pausa de 15 segundos entre pruebas...\n\n🔥 Iniciando prueba de carga: 5 usuarios concurrentes por 30s\n👤 Usuario 0 iniciado\n👤 Usuario 1 iniciado\n👤 Usuario 2 iniciado\n👤 Usuario 3 iniciado\n👤 Usuario 4 iniciado\n👤 Usuario 2 terminado\n👤 Usuario 4 terminado\n👤 Usuario 0 terminado\n👤 Usuario 1 terminado\n👤 Usuario 3 terminado\n\n📊 Resultados para 5 usuarios:\n   ⏱️  Duración: 31.5s\n   📝 Total requests: 70\n   ✅ Exitosos: 70\n   ❌ Fallidos: 0\n   📈 Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio respuesta: 231ms\n   🚀 Requests por segundo: 2.22\n⏸️ Pausa de 15 segundos entre pruebas...\n\n============================================================\n🔥 REPORTE DE PRUEBAS DE CARGA\n============================================================\n\n👥 1 usuarios concurrentes:\n   📊 Requests totales: 14\n   ✅ Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio: 254ms\n   🚀 RPS: 0.44\n\n👥 3 usuarios concurrentes:\n   📊 Requests totales: 42\n   ✅ Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio: 254ms\n   🚀 RPS: 1.30\n\n👥 5 usuarios concurrentes:\n   📊 Requests totales: 70\n   ✅ Tasa de éxito: 100.00%\n   ⚡ Tiempo promedio: 231ms\n   🚀 RPS: 2.22\n\n📈 ANÁLISIS DE RENDIMIENTO:\n   🏆 Mejor RPS: 2.22 (5 usuarios)\n   ⚠️  Peor tasa éxito: 100.00% (1 usuarios)\n\n💡 RECOMENDACIONES:\n   ✅ Excelente estabilidad bajo carga\n\n📄 Reporte de carga guardado en: load-test-report.json\n",
      "stderr": ""
    },
    "security": {
      "success": true,
      "duration": 5537,
      "stdout": "🔒 INICIANDO PRUEBAS DE SEGURIDAD\n================================\n🌐 Backend: https://libroderesoluciones-api.onrender.com\n🖥️ Frontend: https://libro-de-resoluciones-v2-9izd-fe0i5ihfg.vercel.app\n\n\n🔒 Prueba de seguridad: SQL Injection\n✅ SQL Injection - SEGURO\n\n🔒 Prueba de seguridad: Autenticación Débil\n⚠️  VULNERABILIDAD DETECTADA: Autenticación Débil\n   Severidad: HIGH\n   Descripción: Sistema acepta contraseñas débiles\n\n🔒 Prueba de seguridad: Enumeración de Usuarios\n⚠️  VULNERABILIDAD DETECTADA: Enumeración de Usuarios\n   Severidad: MEDIUM\n   Descripción: Posible enumeración de usuarios\n\n🔒 Prueba de seguridad: Exposición de Información\n✅ Exposición de Información - SEGURO\n\n🔒 Prueba de seguridad: Bypass de Autenticación\n✅ Bypass de Autenticación - SEGURO\n\n🔒 Prueba de seguridad: Headers de Seguridad\n⚠️  VULNERABILIDAD DETECTADA: Headers de Seguridad\n   Severidad: LOW\n   Descripción: Headers de seguridad faltantes\n\n============================================================\n🔒 REPORTE DE SEGURIDAD\n============================================================\n🛡️ Pruebas pasadas: 3\n⚠️ Advertencias: 2\n❌ Vulnerabilidades críticas: 1\n🔍 Total vulnerabilidades: 3\n\n🚨 VULNERABILIDADES DETECTADAS:\n========================================\n\n1. Autenticación Débil [HIGH]\n   📝 Sistema acepta contraseñas débiles\n   🔍 Evidencia: Contraseña aceptada: 123\n   💡 Recomendación: Implementar política de contraseñas fuertes\n\n2. Enumeración de Usuarios [MEDIUM]\n   📝 Posible enumeración de usuarios\n   🔍 Evidencia: Respuestas diferentes: 2\n   💡 Recomendación: Usar respuestas consistentes para usuarios válidos e inválidos\n\n3. Headers de Seguridad [LOW]\n   📝 Headers de seguridad faltantes\n   🔍 Evidencia: Headers faltantes: x-content-type-options, x-frame-options, x-xss-protection\n   💡 Recomendación: Agregar headers de seguridad recomendados\n\n📊 PUNTUACIÓN DE SEGURIDAD: 50.0%\n💀 CRÍTICO - Múltiples vulnerabilidades críticas\n\n📄 Reporte de seguridad guardado en: security-test-report.json\n",
      "stderr": ""
    },
    "report": {
      "success": true,
      "duration": 95,
      "stdout": "📊 GENERANDO REPORTE CONSOLIDADO DE TESTING\n===========================================\n✅ Reporte de pruebas de producción cargado\n✅ Reporte de pruebas de carga cargado\n✅ Reporte de pruebas de seguridad cargado\n\n📈 ANÁLISIS DE PRUEBAS FUNCIONALES:\n===================================\n✅ Pruebas exitosas: 8/9\n🎯 Tasa de éxito: 88.9%\n\n📋 Resultados por categoría:\n   Infraestructura: 3/3 (100.0%)\n   Autenticación: 2/3 (66.7%)\n   API: 2/2 (100.0%)\n   Cloudinary: 1/1 (100.0%)\n\n🔥 ANÁLISIS DE PRUEBAS DE CARGA:\n===============================\n📊 Usuarios probados: 1, 3, 5\n⏱️ Duración por prueba: 30s\n📈 Tasa promedio de éxito: 100.0%\n⚡ Tiempo promedio de respuesta: 246ms\n🚀 Máximo throughput: 2.22 RPS\n🛡️ Estabilidad: Excelente\n\n🔒 ANÁLISIS DE SEGURIDAD:\n========================\n🛡️ Pruebas pasadas: 3\n⚠️ Advertencias: 2\n❌ Vulnerabilidades críticas: 1\n📊 Puntuación de seguridad: 50%\n\n🚨 Vulnerabilidades encontradas:\n   1. Autenticación Débil [HIGH]\n      Sistema acepta contraseñas débiles\n   2. Enumeración de Usuarios [MEDIUM]\n      Posible enumeración de usuarios\n   3. Headers de Seguridad [LOW]\n      Headers de seguridad faltantes\n\n🎯 EVALUACIÓN GENERAL DEL SISTEMA:\n==================================\n🧪 Funcionalidad: 88.9%\n⚡ Rendimiento: Excelente\n🔒 Seguridad: 50%\n\n🚨 CALIFICACIÓN: C - SISTEMA NECESITA MEJORAS\n🚨 Se requieren correcciones antes de producción\n\n💡 RECOMENDACIONES PRINCIPALES:\n==============================\n1. Investigar y corregir pruebas funcionales fallidas\n2. Abordar vulnerabilidades de seguridad identificadas\n4. Implementar correcciones de seguridad sugeridas\n\n📄 REPORTES GENERADOS:\n======================\n📊 production-test-report.json - Pruebas funcionales\n🔥 load-test-report.json - Pruebas de carga\n🔒 security-test-report.json - Pruebas de seguridad\n📋 consolidated-test-report.json - Reporte consolidado\n\n🎉 TESTING COMPLETADO EXITOSAMENTE\n==================================\n",
      "stderr": ""
    }
  },
  "filesGenerated": [
    "production-test-report.json",
    "load-test-report.json",
    "security-test-report.json",
    "consolidated-test-report.json"
  ]
}