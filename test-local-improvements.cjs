const axios = require('axios');

// Configuraci√≥n para testing local
const LOCAL_BACKEND_URL = 'http://localhost:3000';

async function testLocalImprovements() {
    console.log('üß™ PROBANDO MEJORAS LOCALMENTE');
    console.log('================================');
    
    try {
        // Test 1: Headers de seguridad
        console.log('\n1. üîí Probando headers de seguridad...');
        const healthResponse = await axios.get(`${LOCAL_BACKEND_URL}/health`);
        const headers = healthResponse.headers;
        
        const securityHeaders = {
            'x-content-type-options': 'nosniff',
            'x-frame-options': 'DENY',
            'x-xss-protection': '1; mode=block'
        };
        
        let headersOk = true;
        for (const [header, expectedValue] of Object.entries(securityHeaders)) {
            if (headers[header]) {
                console.log(`‚úÖ ${header}: ${headers[header]}`);
            } else {
                console.log(`‚ùå ${header}: FALTANTE`);
                headersOk = false;
            }
        }
        
        if (headersOk) {
            console.log('‚úÖ Headers de seguridad implementados correctamente');
        } else {
            console.log('‚ùå Algunos headers de seguridad faltan');
        }
        
        // Test 2: Contrase√±as d√©biles
        console.log('\n2. üîê Probando validaci√≥n de contrase√±as d√©biles...');
        try {
            await axios.post(`${LOCAL_BACKEND_URL}/api/user/register`, {
                Nombre: `TestWeak_${Date.now()}`,
                Contrasena: '123',
                Rol: 'usuario'
            });
            console.log('‚ùå Sistema acepta contrase√±as d√©biles');
        } catch (error) {
            if (error.response && error.response.status === 400) {
                console.log('‚úÖ Sistema rechaza contrase√±as d√©biles correctamente');
                console.log(`   Mensaje: ${error.response.data.error}`);
            } else {
                console.log('‚ùå Error inesperado:', error.message);
            }
        }
        
        // Test 3: Login inv√°lido devuelve 401
        console.log('\n3. üö´ Probando login inv√°lido...');
        try {
            await axios.post(`${LOCAL_BACKEND_URL}/api/user/login`, {
                Nombre: 'usuarioinexistente',
                Contrasena: 'contrase√±aincorrecta'
            });
            console.log('‚ùå Login inv√°lido no fue rechazado');
        } catch (error) {
            if (error.response && error.response.status === 401) {
                console.log('‚úÖ Login inv√°lido correctamente rechazado con status 401');
                console.log(`   Mensaje: ${error.response.data.error}`);
            } else {
                console.log(`‚ùå Status incorrecto: ${error.response?.status || 'ERROR'}`);
                console.log(`   Mensaje: ${error.response?.data?.error || error.message}`);
            }
        }
        
        // Test 4: Registro exitoso
        console.log('\n4. ‚úÖ Probando registro exitoso...');
        try {
            const response = await axios.post(`${LOCAL_BACKEND_URL}/api/user/register`, {
                Nombre: `TestUser_${Date.now()}`,
                Contrasena: 'password123',
                Rol: 'usuario'
            });
            console.log('‚úÖ Registro exitoso');
            console.log(`   Usuario: ${response.data.user.Nombre}`);
        } catch (error) {
            console.log('‚ùå Error en registro:', error.response?.data?.error || error.message);
        }
        
        console.log('\nüéØ TESTING LOCAL COMPLETADO');
        console.log('================================');
        
    } catch (error) {
        console.error('‚ùå Error general:', error.message);
        console.log('\nüí° Aseg√∫rate de que el servidor local est√© ejecut√°ndose en http://localhost:3000');
    }
}

// Ejecutar si se llama directamente
if (require.main === module) {
    testLocalImprovements();
}

module.exports = { testLocalImprovements };
