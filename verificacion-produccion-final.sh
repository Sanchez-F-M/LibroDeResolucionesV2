#!/bin/bash

echo "üéâ VERIFICACI√ìN FINAL DE PERSISTENCIA EN PRODUCCI√ìN"
echo "===================================================="
echo ""

# URLs de producci√≥n
BACKEND_URL="https://libro-resoluciones-api.onrender.com"
FRONTEND_URL="https://libro-de-resoluciones-v2-9izd-fe0i5ihfg.vercel.app"

echo "üìä 1. Verificando Backend en Producci√≥n..."
BACKEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${BACKEND_URL}/api/books/all)
if [ "$BACKEND_STATUS" = "200" ]; then
    echo "‚úÖ Backend: FUNCIONANDO"
else
    echo "‚ùå Backend: ERROR ($BACKEND_STATUS)"
    exit 1
fi

echo ""
echo "üìö 2. Contando Resoluciones en Base de Datos..."
RESOLUTION_DATA=$(curl -s ${BACKEND_URL}/api/books/all)
RESOLUTION_COUNT=$(echo "$RESOLUTION_DATA" | grep -o '"NumdeResolucion"' | wc -l)
echo "üìä Total de resoluciones en producci√≥n: $RESOLUTION_COUNT"

if [ "$RESOLUTION_COUNT" -eq 0 ]; then
    echo "‚ùå PROBLEMA: Base de datos de producci√≥n VAC√çA"
    exit 1
else
    echo "‚úÖ Base de datos con datos: $RESOLUTION_COUNT resoluciones"
fi

echo ""
echo "üåê 3. Verificando Frontend en Producci√≥n..."
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${FRONTEND_URL})
if [ "$FRONTEND_STATUS" = "200" ]; then
    echo "‚úÖ Frontend: ACCESIBLE"
else
    echo "‚ùå Frontend: ERROR ($FRONTEND_STATUS)"
    exit 1
fi

echo ""
echo "üîç 4. Verificando P√°gina de B√∫squedas..."
SEARCH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${FRONTEND_URL}/busquedas)
if [ "$SEARCH_STATUS" = "200" ]; then
    echo "‚úÖ P√°gina de b√∫squedas: ACCESIBLE"
else
    echo "‚ùå P√°gina de b√∫squedas: ERROR ($SEARCH_STATUS)"
fi

echo ""
echo "üìã 5. Mostrando Primeras 3 Resoluciones..."
echo "$RESOLUTION_DATA" | grep -o '"NumdeResolucion":"[^"]*","asunto":"[^"]*"' | head -3 | while IFS= read -r line; do
    NUMERO=$(echo "$line" | grep -o '"NumdeResolucion":"[^"]*"' | cut -d'"' -f4)
    ASUNTO=$(echo "$line" | grep -o '"asunto":"[^"]*"' | cut -d'"' -f4)
    echo "   üìÑ $NUMERO: $ASUNTO"
done

echo ""
echo "üéØ 6. RESUMEN FINAL:"
echo "   ‚úÖ Backend funcionando en: $BACKEND_URL"
echo "   ‚úÖ Frontend accesible en: $FRONTEND_URL"
echo "   ‚úÖ Base de datos con $RESOLUTION_COUNT resoluciones"
echo "   ‚úÖ API devuelve datos correctamente"
echo "   ‚úÖ P√°gina de b√∫squedas accesible"

echo ""
echo "üöÄ ESTADO: PERSISTENCIA EN PRODUCCI√ìN FUNCIONANDO CORRECTAMENTE"
echo ""
echo "üì± PR√ìXIMO PASO:"
echo "   1. Abre: ${FRONTEND_URL}/busquedas"
echo "   2. Verifica que se muestren autom√°ticamente las $RESOLUTION_COUNT resoluciones"
echo "   3. Cierra y reabre el navegador para confirmar que los datos persisten"
echo ""

# Diagn√≥stico adicional
echo "üîß 7. Diagn√≥stico del Sistema..."
DIAGNOSE_DATA=$(curl -s ${BACKEND_URL}/diagnose)
BOOKS_COUNT=$(echo "$DIAGNOSE_DATA" | grep -o '"books":[0-9]*' | cut -d':' -f2)
echo "   üìä Libros en diagn√≥stico: $BOOKS_COUNT"
echo "   üìä Libros en API: $RESOLUTION_COUNT"

if [ "$BOOKS_COUNT" = "$RESOLUTION_COUNT" ]; then
    echo "   ‚úÖ Consistencia de datos: CORRECTA"
else
    echo "   ‚ö†Ô∏è  Posible inconsistencia entre diagn√≥stico y API"
fi

echo ""
echo "‚ú® MISI√ìN CUMPLIDA: La persistencia de datos funciona en producci√≥n ‚ú®"
echo ""
